# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.kernelPackages = lib.mkForce pkgs.linuxPackages_latest;
  boot.initrd.availableKernelModules = ["nvme"];
  boot.initrd.kernelModules = [];
  boot.initrd.compressor = "zstd"; # /boot was too smol
  boot.blacklistedKernelModules = [ "dvb_usb_rtl28xxu" "rtl2832" "rtl2830" ]; # radio
  boot.kernelModules = ["nfsd"];
  boot.kernelParams = [ "iomem=relaxed" ]; # wiringOP / gpio permission fix.
  fileSystems."/proc/fs/nfsd" = {
    fsType = "nfsd";
    device = "nfsd";
  };
  boot.extraModulePackages = [];

  boot.loader.systemd-boot.configurationLimit = 5;
  boot.loader.grub.configurationLimit = 5;

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/f222513b-ded1-49fa-b591-20ce86a2fe7f";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/12CE-A600";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  fileSystems."/mnt/backup" = {
    device = "/dev/disk/by-uuid/722C54791642E0EB";
    fsType = "ntfs";
    options = ["nofail"];
  };
  fileSystems."/srv/sdd" = {
    device = "/mnt/backup";
    fsType = "none";
    options = [ "bind" "nofail" ];
  };

  # We're running on an NVMe.
  swapDevices = [
    {
      device = "/swapfile";
      size = 4096;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enP3p49s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enP4p65s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
