# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.kernelPackages = lib.mkForce pkgs.linuxPackages_latest;
  # Orange Pi 5 Plus hardware support
  boot.initrd.availableKernelModules = [
    # Storage - NVMe for boot drive
    "nvme"
    # USB storage support
    "uas" 
    "usb_storage"
    "usbhid"
    # Rockchip-specific storage
    "dw_mmc_rockchip"
    "spi_rockchip_sfc"
    # Essential for boot
    "rockchip_saradc"
    "rockchip_thermal"
  ];

  boot.kernelModules = [
    # Core Rockchip modules
    "rockchip_saradc"
    "rockchip_thermal"
    "rockchip_rga"
    # Graphics and display
    "rockchipdrm"
    "panthor"
    "dw_hdmi"
    "dw_hdmi_qp"
    "analogix_dp"
    "dw_mipi_dsi"
    # USB and PHY
    "phy_rockchip_usbdp"
    "phy_rockchip_naneng_combphy"
    "phy_rockchip_samsung_hdptx"
    # Audio
    "snd_soc_rockchip_i2s"
    "snd_soc_rockchip_i2s_tdm"
    # Video processing
    "hantro_vpu"
    # Performance monitoring
    "rockchip_dfi"
  ];

  # Enable firmware loading
  hardware.enableRedistributableFirmware = true;
  boot.initrd.kernelModules = [];
  boot.initrd.compressor = "zstd"; # /boot was too smol
  boot.initrd.compressorArgs = [ "-19" "-T0" ];
  boot.initrd.includeDefaultModules = false;  # Important!
  boot.blacklistedKernelModules = [ "dvb_usb_rtl28xxu" "rtl2832" "rtl2830" ]; # radio
  boot.kernelParams = [ "iomem=relaxed" ]; # wiringOP / gpio permission fix.
  boot.extraModulePackages = [];

  boot.loader.systemd-boot.configurationLimit = 5;
  boot.loader.grub.configurationLimit = 5;

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/f222513b-ded1-49fa-b591-20ce86a2fe7f";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/12CE-A600";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  fileSystems."/srv/sdd" = {
    device = "/dev/disk/by-uuid/722C54791642E0EB";
    fsType = "ntfs";
    options = ["nofail"];
  };

  # We're running on an NVMe.
  swapDevices = [
    {
      device = "/swapfile";
      size = 4096;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enP3p49s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enP4p65s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
